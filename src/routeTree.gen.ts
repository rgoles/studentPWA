/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth.index'
import { Route as AuthAddHoursRouteImport } from './routes/_auth.add-hours'
import { Route as AuthAboutRouteImport } from './routes/_auth.about'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAddHoursRoute = AuthAddHoursRouteImport.update({
  id: '/add-hours',
  path: '/add-hours',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAboutRoute = AuthAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AuthAboutRoute
  '/add-hours': typeof AuthAddHoursRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AuthAboutRoute
  '/add-hours': typeof AuthAddHoursRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_auth/about': typeof AuthAboutRoute
  '/_auth/add-hours': typeof AuthAddHoursRoute
  '/_auth/': typeof AuthIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/register' | '/about' | '/add-hours' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/register' | '/about' | '/add-hours' | '/'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/register'
    | '/_auth/about'
    | '/_auth/add-hours'
    | '/_auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/add-hours': {
      id: '/_auth/add-hours'
      path: '/add-hours'
      fullPath: '/add-hours'
      preLoaderRoute: typeof AuthAddHoursRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/about': {
      id: '/_auth/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthAboutRoute: typeof AuthAboutRoute
  AuthAddHoursRoute: typeof AuthAddHoursRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAboutRoute: AuthAboutRoute,
  AuthAddHoursRoute: AuthAddHoursRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
