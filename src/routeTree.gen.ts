/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestRouteImport } from './routes/test'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth.index'
import { Route as AuthAboutRouteImport } from './routes/_auth.about'
import { Route as AuthShiftsListRouteImport } from './routes/_auth.shifts/list'
import { Route as AuthShiftsAddRouteImport } from './routes/_auth.shifts/add'

const TestRoute = TestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAboutRoute = AuthAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AuthRoute,
} as any)
const AuthShiftsListRoute = AuthShiftsListRouteImport.update({
  id: '/shifts/list',
  path: '/shifts/list',
  getParentRoute: () => AuthRoute,
} as any)
const AuthShiftsAddRoute = AuthShiftsAddRouteImport.update({
  id: '/shifts/add',
  path: '/shifts/add',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/about': typeof AuthAboutRoute
  '/': typeof AuthIndexRoute
  '/shifts/add': typeof AuthShiftsAddRoute
  '/shifts/list': typeof AuthShiftsListRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/about': typeof AuthAboutRoute
  '/': typeof AuthIndexRoute
  '/shifts/add': typeof AuthShiftsAddRoute
  '/shifts/list': typeof AuthShiftsListRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/_auth/about': typeof AuthAboutRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/shifts/add': typeof AuthShiftsAddRoute
  '/_auth/shifts/list': typeof AuthShiftsListRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/register'
    | '/test'
    | '/about'
    | '/'
    | '/shifts/add'
    | '/shifts/list'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/test'
    | '/about'
    | '/'
    | '/shifts/add'
    | '/shifts/list'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/register'
    | '/test'
    | '/_auth/about'
    | '/_auth/'
    | '/_auth/shifts/add'
    | '/_auth/shifts/list'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  TestRoute: typeof TestRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/about': {
      id: '/_auth/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/shifts/list': {
      id: '/_auth/shifts/list'
      path: '/shifts/list'
      fullPath: '/shifts/list'
      preLoaderRoute: typeof AuthShiftsListRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/shifts/add': {
      id: '/_auth/shifts/add'
      path: '/shifts/add'
      fullPath: '/shifts/add'
      preLoaderRoute: typeof AuthShiftsAddRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthAboutRoute: typeof AuthAboutRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthShiftsAddRoute: typeof AuthShiftsAddRoute
  AuthShiftsListRoute: typeof AuthShiftsListRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAboutRoute: AuthAboutRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthShiftsAddRoute: AuthShiftsAddRoute,
  AuthShiftsListRoute: AuthShiftsListRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  TestRoute: TestRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
